<Project>
  <!-- This file will be included in all MsBuilds of projects below this folder, the file calculates Version, PackageVersion and FileVersion properties.
       Version property corresponds to Package version in project UI, PackageVersion is normally set from Version property and FileVersion corresponds
       to Assembly file version in project UI.
       We recommend to set Assembly version (AssemblyVersion property) and Assembly file version (FileVersion proptery) explicit in all projects intended for deployment.
  -->

  <ItemGroup>
    <!-- Version number generation is dependent on GitVersion -->
    <PackageReference Include="GitVersionTask" Version="5.1.3">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Let GitVersion calculate the product version before .NET Sdk creates assembly version info -->
  <Target Name="SetProductVersion" DependsOnTargets="GetVersion" BeforeTargets="CoreCompile;GetAssemblyVersion;GenerateNuspec;_GenerateRestoreProjectSpec;_GetOutputItemsFromPack"
          Condition="Exists('$(NuGetPackageRoot)gitversiontask\5.1.3\build\GitVersionTask.targets')"> <!-- Don't use when creating <project>.nuget.g.props/targets, ie. before GitVersionTask is imported -->

    <Message Text="GitVersion calculated version $(GitVersion_NuGetVersion), used for Package version.
      Also used for AssemblyVersion, FileVersion and InformationalVersion unless they are set in project file." />
    <!-- This last line is performed by Task GetAssemblyVersion in Microsoft.NET.GenerateAssemblyInfo.targets -->

    <PropertyGroup>
      <Version>$(GitVersion_NuGetVersion)</Version> <!-- Override any settings from project file -->

      <PackageVersion>$(GitVersion_NuGetVersion)</PackageVersion> <!-- Set version number for NuGetPackage (if built) -->
      <!-- This could have been set automagically from Version if we knew how to calculate Version before NuGet.Build.Tasks.Pack.targets is imported.
           PackageVersion is set in NuGet.Build.Tasks.Pack.targets by Import from Sdk.targets -->

    </PropertyGroup>
  </Target>

  <!-- Set build number in FileVersion(AssemblyFileVersion) if supplied and not specified explicitly -->
  <Target Name="SetBuildNumber" BeforeTargets="GetAssemblyVersion" Condition="'$(BUILD_BUILDNUMBER)' != ''">

    <PropertyGroup>
      <FileVersion Condition="'$(FileVersion)' == ''">0.0.0.0</FileVersion> <!-- Dummy value if not set-->

      <!-- RegEx to check if build number shall be inserted -->
      <FileVersionRegEx>(\d+\.\d+\.)0(?:\.0)?</FileVersionRegEx>

      <!-- Substitution pattern for RegEx -->
      <BuildNumberSubstitution>%24{1}$(BUILD_BUILDNUMBER)</BuildNumberSubstitution>

      <!-- Insert build number if FileVersion has format x.y.0(.0) -->
      <FileVersion>$([System.Text.RegularExpressions.RegEx]::Replace($(FileVersion), $(FileVersionRegEx), $(BuildNumberSubstitution)))</FileVersion>
    </PropertyGroup>

    <Message Text="FileVersion set to $(FileVersion)" />
  </Target>
</Project>
